{"version":3,"file":"static/js/409.b920422c.chunk.js","mappings":"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","sources":["cssAnimation/LoadingSkeleton.js","cssAnimation/loadingComponentSkeleton.js","layout/Banner.js","components/MoviePopular.js","components/MovieTopRated.js","components/MovieUpComing.js","Pages/HomePage.js","button/Button.js","components/MovieCardItem.js","config.js","layout/Footer.js","layout/Header.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst LoadingSkeleton = (props) => {\r\n  return (\r\n    <div\r\n      className={`skeleton ${props.className}`}\r\n      // style={{\r\n      //   height: props.height,\r\n      //   width: props.width || \"100%\",\r\n      //   borderRadius: props.radius,\r\n      // }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default LoadingSkeleton;\r\n","import LoadingSkeleton from \"./LoadingSkeleton\";\r\nimport React from \"react\";\r\nconst BannerItemSkeleton = () => {\r\n  return (\r\n    <div className=\"relative\">\r\n      <div className=\"overlay absolute inset-0 rounded-lg bg-gradient-to-b from-[rgba(0,0,0,0)] to-[rgba(0,0,0,0.67)]\"></div>\r\n      <LoadingSkeleton className=\" w-full h-[600px]\"></LoadingSkeleton>\r\n    </div>\r\n  );\r\n};\r\nconst MovieCardItemSkeleton = () => {\r\n  return (\r\n    <div className=\"select-none movie-card\">\r\n      <LoadingSkeleton className=\"rounded-xl w-[200px] h-[150px]\"></LoadingSkeleton>\r\n      <LoadingSkeleton className=\"mt-2 mb-1 max-w-[150px] h-4 rounded-lg\"></LoadingSkeleton>\r\n      <div className=\"flex items-center\">\r\n        <LoadingSkeleton className=\"w-3 h-3 rounded\"></LoadingSkeleton>\r\n        <LoadingSkeleton className=\"w-2 h-3 mx-2 rounded-sm\"></LoadingSkeleton>\r\n        {new Array(2).fill(0).map((item) => (\r\n          <React.Fragment>\r\n            <div className=\"flex items-center justify-center mr-[0.8px]\">\r\n              <span className=\"text-gray-500 h-[28px]\">|</span>\r\n              <span className=\"mx-[3px] text-xs text-gray-500\">\r\n                <LoadingSkeleton className=\"mx-[3px] w-6 h-3 rounded\"></LoadingSkeleton>\r\n              </span>\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { BannerItemSkeleton, MovieCardItemSkeleton };\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdb } from \"../config\";\r\nimport Button from \"../button/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BannerItemSkeleton } from \"../cssAnimation/loadingComponentSkeleton\";\r\nconst Banner = () => {\r\n  // This tmdb is taken from the config file, the purpose is to no longer display the API endpoints.\r\n  const { data, error } = useSWR(tmdb.getMovieList(\"popular\"), fetcher);\r\n  const dataBanner = data?.results || [];\r\n  return (\r\n    <React.Fragment>\r\n      {dataBanner.length > 0 && (\r\n        <Swiper\r\n          className=\"swiper_banner\"\r\n          grabCursor\r\n          spaceBetween={40}\r\n          slidesPerView={\"auto\"}\r\n        >\r\n          {dataBanner &&\r\n            dataBanner.slice(0, 4).map((item, index) => (\r\n              <SwiperSlide key={item.id}>\r\n                <BannerItem key={index} item={item}></BannerItem>\r\n              </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst BannerItem = ({ item }) => {\r\n  const navigate = useNavigate();\r\n  // This tmdb is taken from the config file, the purpose is to no longer display the API endpoints.\r\n  const { data, error } = useSWR(\r\n    tmdb.getMovieDetail(\"credits\", item.id),\r\n    fetcher\r\n  );\r\n  if (!data) return null;\r\n  const { cast } = data;\r\n  const { backdrop_path, original_title, release_date, overview, id } = item;\r\n  const date = new Date(release_date);\r\n  const month = date.getMonth();\r\n  const day = date.getDate();\r\n  const year = date.getFullYear();\r\n  const dateRelease = `${month < 10 ? `0${month}` : month} ${\r\n    day < 10 ? `0${day}` : day\r\n  }, ${year}`;\r\n  // isLoading is used to simulate that when there is no data, the loading skeleton will be displayed.\r\n  const isLoading = !data && !error;\r\n  return (\r\n    <div className=\"relative\">\r\n      {isLoading ? (\r\n        <BannerItemSkeleton className=\" w-full h-[600px]\"></BannerItemSkeleton>\r\n      ) : (\r\n        <React.Fragment>\r\n          <div className=\"absolute inset-0 rounded-lg bg-gradient-to-b from-[rgba(0,0,0,0)] to-[rgba(0,0,0,0.67)] h-[620px]\"></div>\r\n          <img\r\n            src={tmdb.imgOriginal(backdrop_path)}\r\n            alt=\"\"\r\n            className=\"w-full h-[600px] object-cover\"\r\n          />\r\n\r\n          <div className=\"absolute w-full banner-info left-16 top-[7.25rem] \">\r\n            <h2 className=\"mb-3 text-4xl font-bold text-white\">\r\n              {original_title}\r\n            </h2>\r\n            <p className=\"mb-3 text-sm text-gray-100\">{dateRelease}</p>\r\n            <div className=\"flex items-center justify-between w-[1024px]\">\r\n              <div className=\"\">\r\n                <p className=\"mb-3 text-base font-bold text-white \">\r\n                  Story Line\r\n                </p>\r\n                <p className=\"text-sm  max-w-[300px]  text-white \">\r\n                  {overview}\r\n                </p>\r\n                <div className=\"cast\">\r\n                  <p className=\"mt-6 mb-4 text-base font-bold text-white\">\r\n                    Top Cast\r\n                  </p>\r\n                  <div className=\"flex gap-x-6\">\r\n                    {cast &&\r\n                      cast.slice(0, 3).map((item) => (\r\n                        <div key={item.id} className=\"flex items-center\">\r\n                          <img\r\n                            className=\"object-cover w-10 h-10 rounded-full\"\r\n                            src={tmdb.imgOriginal(item.profile_path)}\r\n                            alt=\"\"\r\n                          />\r\n\r\n                          <p className=\"ml-2 text-sm text-white\">{item.name}</p>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center w-full mt-6\">\r\n              <Button\r\n                onClick={() => navigate(`/${id}`)}\r\n                className={\"mr-6 bg-green-600 \"}\r\n              >\r\n                Watch Now\r\n              </Button>\r\n              <Button\r\n                className={\r\n                  \"border-white border w-[160px] hover:bg-gray-400 hover:text-black\"\r\n                }\r\n              >\r\n                Add Watchlist\r\n              </Button>\r\n              <div>\r\n                <Button\r\n                  className={\r\n                    \" hover:bg-gray-400 hover:text-black relative left-[570px] border border-white\"\r\n                  }\r\n                >\r\n                  Like\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport useSWR from \"swr\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { fetcher, tmdb } from \"../config\";\r\nimport MovieCardItem from \"./MovieCardItem\";\r\nimport { MovieCardItemSkeleton } from \"../cssAnimation/loadingComponentSkeleton\";\r\n\r\nconst MoviePopular = () => {\r\n  const { data, error } = useSWR(tmdb.getMovieList(\"popular\"), fetcher);\r\n  if (!data) return null;\r\n  const { results } = data;\r\n  // isLoading is used to simulate that when there is no data, the loading skeleton will be displayed.\r\n  const isLoading = !data && !error;\r\n  return (\r\n    <section className=\"mt-8 movie-list\">\r\n      <p className=\"mb-4 text-xl font-bold text-white\">\r\n        Popular Movies for you\r\n      </p>\r\n      <Swiper grabCursor spaceBetween={22} slidesPerView={\"auto\"}>\r\n        {isLoading\r\n          ? results.length > 0 &&\r\n            results.map((item) => (\r\n              <SwiperSlide key={item.id} className=\"swiper-movie-top--rated\">\r\n                <MovieCardItemSkeleton item={item}></MovieCardItemSkeleton>\r\n              </SwiperSlide>\r\n            ))\r\n          : results.length > 0 &&\r\n            results.map((item) => (\r\n              <SwiperSlide key={item.id} className=\"swiper-movie-top--rated\">\r\n                <MovieCardItem item={item}></MovieCardItem>\r\n              </SwiperSlide>\r\n            ))}\r\n      </Swiper>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MoviePopular;\r\n","import React from \"react\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdb } from \"../config\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport MovieCardItem from \"./MovieCardItem\";\r\nimport { MovieCardItemSkeleton } from \"../cssAnimation/loadingComponentSkeleton\";\r\n\r\nconst MovieTopRated = () => {\r\n  const { data, error } = useSWR(tmdb.getMovieList(\"top_rated\"), fetcher);\r\n  if (!data) return null;\r\n  const { results } = data;\r\n  // isLoading is used to simulate that when there is no data, the loading skeleton will be displayed.\r\n  const isLoading = !data && !error;\r\n  return (\r\n    <section className=\"mt-8 movie-list\">\r\n      <p className=\"mb-4 text-xl font-bold text-white\">Top Rated</p>\r\n      <Swiper grabCursor spaceBetween={22} slidesPerView={\"auto\"}>\r\n        {isLoading\r\n          ? results.length > 0 &&\r\n            results.map((item) => (\r\n              <SwiperSlide key={item.id} className=\"swiper-movie-top--rated\">\r\n                <MovieCardItemSkeleton item={item}></MovieCardItemSkeleton>\r\n              </SwiperSlide>\r\n            ))\r\n          : results.length > 0 &&\r\n            results.map((item) => (\r\n              <SwiperSlide key={item.id} className=\"swiper-movie-top--rated\">\r\n                <MovieCardItem item={item}></MovieCardItem>\r\n              </SwiperSlide>\r\n            ))}\r\n      </Swiper>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MovieTopRated;\r\n","import React from \"react\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdb } from \"../config\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport MovieCardItem from \"./MovieCardItem\";\r\nimport { MovieCardItemSkeleton } from \"../cssAnimation/loadingComponentSkeleton\";\r\n\r\nconst MovieUpComing = () => {\r\n  const { data, error } = useSWR(tmdb.getMovieList(\"upcoming\"), fetcher);\r\n  if (!data) return null;\r\n  const movies = data.results || [];\r\n  // isLoading is used to simulate that when there is no data, the loading skeleton will be displayed.\r\n  const isLoading = !data && !error;\r\n  return (\r\n    <section className=\"mt-8 movie-list\">\r\n      <p className=\"mb-4 text-xl font-bold text-white\">Up Coming</p>\r\n      <Swiper grabCursor spaceBetween={22} slidesPerView={\"auto\"}>\r\n        {isLoading\r\n          ? movies.length > 0 &&\r\n            movies.map((item) => (\r\n              <SwiperSlide key={item.id} className=\"swiper-movie-top--rated\">\r\n                <MovieCardItemSkeleton item={item}></MovieCardItemSkeleton>\r\n              </SwiperSlide>\r\n            ))\r\n          : movies.length > 0 &&\r\n            movies.map((item) => (\r\n              <SwiperSlide key={item.id} className=\"swiper-movie-top--rated\">\r\n                <MovieCardItem item={item}></MovieCardItem>\r\n              </SwiperSlide>\r\n            ))}\r\n      </Swiper>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MovieUpComing;\r\n","import React from \"react\";\r\nimport Banner from \"../layout/Banner\";\r\nimport MoviePopular from \"../components/MoviePopular\";\r\nimport MovieTopRated from \"../components/MovieTopRated\";\r\nimport MovieUpComing from \"../components/MovieUpComing\";\r\nimport Header from \"../layout/Header\";\r\nimport Footer from \"../layout/Footer\";\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <Header></Header>\r\n      <Banner></Banner>\r\n      <MoviePopular></MoviePopular>\r\n      <MovieTopRated></MovieTopRated>\r\n      <MovieUpComing></MovieUpComing>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ type, onClick, children, className }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button\r\n        onClick={onClick}\r\n        className={`bg-black text-white w-[140px] h-[46px] rounded-lg font-bold ${className}`}\r\n        type={type}\r\n      >\r\n        {children}\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdb } from \"../config\";\r\n\r\nconst MovieCardItem = ({ item }) => {\r\n  const navigate = useNavigate();\r\n  const { title, vote_average, poster_path, id } = item;\r\n  const { data, error } = useSWR(tmdb.getMovieDetail(\"\", id), fetcher);\r\n  const genres = data?.genres || [];\r\n  return (\r\n    <div\r\n      onClick={() => navigate(`/movieDetail/${id}`)}\r\n      className=\"cursor-pointer select-none movie-card\"\r\n    >\r\n      <img\r\n        className=\"rounded-xl w-[200px] h-[150px] hover:scale-[1.07] ease-linear duration-200 object-contain mb-3\"\r\n        src={tmdb.imgOriginal(poster_path)}\r\n        alt=\"\"\r\n      />\r\n      <p className=\"mt-2 mb-1 text-sm font-bold text-white max-w-[200px] truncate  \">\r\n        {title}\r\n      </p>\r\n      <div className=\"flex items-center\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          id=\"star\"\r\n        >\r\n          <path\r\n            fill=\"#f8b84e\"\r\n            d=\"M-1220 1212.362c-11.656 8.326-86.446-44.452-100.77-44.568-14.324-.115-89.956 51.449-101.476 42.936-11.52-8.513 15.563-95.952 11.247-109.61-4.316-13.658-76.729-69.655-72.193-83.242 4.537-13.587 96.065-14.849 107.721-23.175 11.656-8.325 42.535-94.497 56.86-94.382 14.323.116 43.807 86.775 55.327 95.288 11.52 8.512 103.017 11.252 107.334 24.91 4.316 13.658-68.99 68.479-73.527 82.066-4.536 13.587 21.133 101.451 9.477 109.777z\"\r\n            color=\"#000\"\r\n            overflow=\"visible\"\r\n            transform=\"matrix(.04574 0 0 .04561 68.85 -40.34)\"\r\n          ></path>\r\n        </svg>\r\n        <span className=\"mx-2 text-xs font-bold text-white\">\r\n          {Math.floor(vote_average)}\r\n        </span>\r\n        {genres.length > 0 ? (\r\n          genres.slice(0, 2).map((item) => (\r\n            <React.Fragment>\r\n              <div className=\"flex items-center justify-center mr-[0.8px]\">\r\n                <span className=\"text-gray-500 h-[28px]\">|</span>\r\n                <span className=\"mx-[3px] text-xs text-gray-500\">\r\n                  {item.name}\r\n                </span>\r\n              </div>\r\n            </React.Fragment>\r\n          ))\r\n        ) : (\r\n          <span className=\"text-xs text-gray-500 \">Updating</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCardItem;\r\n","export const apiEndPoint = \"https://api.themoviedb.org/3/movie/\";\r\nexport const apiKey = \"api_key=8b3c7ef30b0460b1ce585fb7c8f7c4c0\";\r\nexport const fetcher = (...args) => fetch(...args).then((res) => res.json());\r\nexport const tmdb = {\r\n  getMovieList: (type) =>\r\n    `https://api.themoviedb.org/3/movie/${type}?${apiKey}`,\r\n  getMovieDetail: (type, idMovie) =>\r\n    type !== \"\"\r\n      ? `https://api.themoviedb.org/3/movie/${idMovie}/${type}?${apiKey}`\r\n      : `https://api.themoviedb.org/3/movie/${idMovie}?${apiKey}`,\r\n  getMovieVideo: (type, idMovie) =>\r\n    `https://api.themoviedb.org/3/movie/${idMovie}/${type}?${apiKey}`,\r\n  getMovieYoutube: (key) => `https://www.youtube.com/embed/${key}`,\r\n  imgOriginal: (url) => `https://image.tmdb.org/t/p/original${url}`,\r\n  img500: (url) => `https://image.tmdb.org/t/p/w500/${url}`,\r\n  imgWidth500: (url) => `https://image.tmdb.org/t/p/w500/${url}?${apiKey}`,\r\n  imgNetFlix: () =>\r\n    \"https://assets.nflxext.com/ffe/siteui/vlv3/6c884f48-f7d8-4a59-9d25-b7c138813aee/5900db94-decb-4941-87d2-a54eaf165ecc/VN-vi-20230807-popsignuptwoweeks-perspective_alpha_website_large.jpg\",\r\n  imgPageUpdating: () =>\r\n    \"https://th.bing.com/th/id/R.d444a087458127e634df23982c85ef5d?rik=lpQU07ymgdZ1Yg&riu=http%3a%2f%2fwww.acvorganization.com%2fwebsite-update.jpg&ehk=COkmI2azW18r%2fuvEb1PZxNk2fb7tS3ov66vQB0Ec%2bVo%3d&risl=&pid=ImgRaw&r=0\",\r\n};\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <section className=\"mt-16 movie-footer\">\r\n      <div className=\"\">\r\n        <p className=\"mb-6 text-xl font-bold text-center text-white\">\r\n          Our platform is trusted by millions & features best updated movies all\r\n          around the world.\r\n        </p>\r\n        <div className=\"flex items-center justify-center cursor-pointer gap-x-3\">\r\n          <svg\r\n            className=\"w-8 h-8\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            data-name=\"Ebene 1\"\r\n            viewBox=\"0 0 1024 1024\"\r\n            id=\"facebook-logo-2019\"\r\n          >\r\n            <path\r\n              fill=\"#1877f2\"\r\n              d=\"M1024,512C1024,229.23016,794.76978,0,512,0S0,229.23016,0,512c0,255.554,187.231,467.37012,432,505.77777V660H302V512H432V399.2C432,270.87982,508.43854,200,625.38922,200,681.40765,200,740,210,740,210V336H675.43713C611.83508,336,592,375.46667,592,415.95728V512H734L711.3,660H592v357.77777C836.769,979.37012,1024,767.554,1024,512Z\"\r\n            ></path>\r\n            <path\r\n              fill=\"#fff\"\r\n              d=\"M711.3,660,734,512H592V415.95728C592,375.46667,611.83508,336,675.43713,336H740V210s-58.59235-10-114.61078-10C508.43854,200,432,270.87982,432,399.2V512H302V660H432v357.77777a517.39619,517.39619,0,0,0,160,0V660Z\"\r\n            ></path>\r\n          </svg>\r\n          <svg\r\n            className=\"w-8 h-8\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 16 16\"\r\n            id=\"youtube\"\r\n          >\r\n            <g fillRule=\"evenodd\" clipRule=\"evenodd\">\r\n              <path\r\n                fill=\"#F44336\"\r\n                d=\"M15.32 4.06c-.434-.772-.905-.914-1.864-.968C12.498 3.027 10.089 3 8.002 3c-2.091 0-4.501.027-5.458.091-.957.055-1.429.196-1.867.969C.23 4.831 0 6.159 0 8.497v.008c0 2.328.23 3.666.677 4.429.438.772.909.912 1.866.977.958.056 3.368.089 5.459.089 2.087 0 4.496-.033 5.455-.088.959-.065 1.43-.205 1.864-.977.451-.763.679-2.101.679-4.429v-.008c0-2.339-.228-3.667-.68-4.438z\"\r\n              ></path>\r\n              <path fill=\"#FAFAFA\" d=\"M6 11.5v-6l5 3z\"></path>\r\n            </g>\r\n          </svg>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"w-8 h-8\"\r\n            viewBox=\"0 0 16 16\"\r\n            id=\"twitter\"\r\n          >\r\n            <path\r\n              fill=\"#03A9F4\"\r\n              d=\"M16 3.539a6.839 6.839 0 0 1-1.89.518 3.262 3.262 0 0 0 1.443-1.813 6.555 6.555 0 0 1-2.08.794 3.28 3.28 0 0 0-5.674 2.243c0 .26.022.51.076.748a9.284 9.284 0 0 1-6.761-3.431 3.285 3.285 0 0 0 1.008 4.384A3.24 3.24 0 0 1 .64 6.578v.036a3.295 3.295 0 0 0 2.628 3.223 3.274 3.274 0 0 1-.86.108 2.9 2.9 0 0 1-.621-.056 3.311 3.311 0 0 0 3.065 2.285 6.59 6.59 0 0 1-4.067 1.399c-.269 0-.527-.012-.785-.045A9.234 9.234 0 0 0 5.032 15c6.036 0 9.336-5 9.336-9.334 0-.145-.005-.285-.012-.424A6.544 6.544 0 0 0 16 3.539z\"\r\n            ></path>\r\n          </svg>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"w-8 h-8\"\r\n            viewBox=\"0 0 28.87 28.87\"\r\n            id=\"instagram\"\r\n          >\r\n            <defs>\r\n              <linearGradient\r\n                id=\"a\"\r\n                x1=\"-1.84\"\r\n                x2=\"32.16\"\r\n                y1=\"30.47\"\r\n                y2=\"-3.03\"\r\n                gradientUnits=\"userSpaceOnUse\"\r\n              >\r\n                <stop offset=\"0\" stopColor=\"#fed576\"></stop>\r\n                <stop offset=\".26\" stopColor=\"#f47133\"></stop>\r\n                <stop offset=\".61\" stopColor=\"#bc3081\"></stop>\r\n                <stop offset=\"1\" stopColor=\"#4c63d2\"></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g data-name=\"Layer 2\">\r\n              <g data-name=\"Layer 1\">\r\n                <rect\r\n                  width=\"28.87\"\r\n                  height=\"28.87\"\r\n                  fill=\"url(#a)\"\r\n                  rx=\"6.48\"\r\n                  ry=\"6.48\"\r\n                ></rect>\r\n                <g data-name=\"<Group>\">\r\n                  <path\r\n                    fill=\"#fff\"\r\n                    d=\"M10 5h9c.2.1.5.1.7.2a4.78 4.78 0 0 1 3.8 3.3 8 8 0 0 1 .3 1.5v8.8a6.94 6.94 0 0 1-1.2 3.1 5.51 5.51 0 0 1-4.5 1.9h-7.5a5.49 5.49 0 0 1-3.7-1.2A5.51 5.51 0 0 1 5 18.14v-7a7.57 7.57 0 0 1 .1-1.5 4.9 4.9 0 0 1 3.8-4.3zm-3.1 9.5v3.9a3.42 3.42 0 0 0 3.7 3.7q3.9.15 7.8 0c2.3 0 3.6-1.4 3.7-3.7q.15-3.9 0-7.8a3.52 3.52 0 0 0-3.7-3.7q-3.9-.15-7.8 0a3.42 3.42 0 0 0-3.7 3.7z\"\r\n                    data-name=\"<Compound Path>\"\r\n                  ></path>\r\n                  <path\r\n                    fill=\"#fff\"\r\n                    d=\"M9.64 14.54a4.91 4.91 0 0 1 4.9-4.9 5 5 0 0 1 4.9 4.9 4.91 4.91 0 0 1-4.9 4.9 5 5 0 0 1-4.9-4.9zm4.9-3.1a3.05 3.05 0 1 0 3 3 3 3 0 0 0-3-3z\"\r\n                    data-name=\"<Compound Path>\"\r\n                  ></path>\r\n                  <path\r\n                    fill=\"#fff\"\r\n                    d=\"M18.34 9.44a1.16 1.16 0 0 1 1.2-1.2 1.29 1.29 0 0 1 1.2 1.2 1.2 1.2 0 0 1-2.4 0z\"\r\n                    data-name=\"<Path>\"\r\n                  ></path>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nconst Header = () => {\r\n  // const navRef = useRef([]);\r\n  // const pushNavRef = (ele) => navRef.current.push(ele);\r\n  const navigate = useNavigate();\r\n  // This formState is to simulate that when you successfully log in, the header will no longer display the login button.\r\n  const formState = JSON.parse(sessionStorage.getItem(\"formState\")) || null;\r\n  // This headerRef and useEffect is used to hide the header when you scroll down and show the header when you scroll up.\r\n  const headerRef = useRef();\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousewheel\", (e) => {\r\n      if (headerRef.current) {\r\n        const scrollHeight = e.deltaY;\r\n        if (scrollHeight > 0)\r\n          headerRef.current.classList.add(\"show_header--up\");\r\n        if (scrollHeight < 0) {\r\n          headerRef.current.classList.remove(\"show_header--up\");\r\n          headerRef.current.classList.add(\"show_header--down\");\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        ref={headerRef}\r\n        className=\"header flex font-bold items-center justify-center translate-y-[-2%] text-white sticky z-9999 w-full  h-[50px] bg-black pl-10 \"\r\n      >\r\n        <div>\r\n          <NavLink\r\n            to={\"/\"}\r\n            // ref={pushNavRef}\r\n            className={\"mr-6 cursor-pointer home\"}\r\n            onClick={() => navigate(\"/\")}\r\n          >\r\n            Home\r\n          </NavLink>\r\n          <div className=\"bar\"> </div>\r\n        </div>\r\n        {\r\n          <div>\r\n            <span\r\n              // ref={pushNavRef}\r\n              onClick={() => navigate(\"/pageUpdating\")}\r\n              className=\"mr-8 cursor-pointer movie_realease\"\r\n            >\r\n              Movie Realease\r\n            </span>\r\n            <div className=\"bar\"></div>\r\n          </div>\r\n        }\r\n\r\n        <div className=\"flex items-center ml-auto mr-8 cursor-pointer\">\r\n          <div onClick={() => navigate(\"/log_in\")}></div>\r\n          {formState ? (\r\n            <div>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth={1.5}\r\n                stroke=\"currentColor\"\r\n                class=\"w-6 h-6\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M17.982 18.725A7.488 7.488 0 0012 15.75a7.488 7.488 0 00-5.982 2.975m11.963 0a9 9 0 10-11.963 0m11.963 0A8.966 8.966 0 0112 21a8.966 8.966 0 01-5.982-2.275M15 9.75a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          ) : (\r\n            <div onClick={() => navigate(\"/log_in\")}>Log In</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"names":["props","_jsx","className","concat","BannerItemSkeleton","_jsxs","children","LoadingSkeleton","MovieCardItemSkeleton","Array","fill","map","item","React","BannerItem","_ref","navigate","useNavigate","_useSWR2","useSWR","tmdb","getMovieDetail","id","fetcher","data","error","cast","backdrop_path","original_title","release_date","overview","date","Date","month","getMonth","day","getDate","year","getFullYear","dateRelease","isLoading","src","imgOriginal","alt","slice","profile_path","name","Button","onClick","_useSWR","getMovieList","dataBanner","results","length","Swiper","grabCursor","spaceBetween","slidesPerView","index","SwiperSlide","MovieCardItem","movies","Header","Banner","MoviePopular","MovieTopRated","MovieUpComing","Footer","type","title","vote_average","poster_path","genres","xmlns","width","height","d","color","overflow","transform","Math","floor","apiKey","fetch","apply","arguments","then","res","json","idMovie","getMovieVideo","getMovieYoutube","key","url","img500","imgWidth500","imgNetFlix","imgPageUpdating","viewBox","fillRule","clipRule","x1","x2","y1","y2","gradientUnits","offset","stopColor","rx","ry","formState","JSON","parse","sessionStorage","getItem","headerRef","useRef","useEffect","window","addEventListener","e","current","scrollHeight","deltaY","classList","add","remove","ref","NavLink","to","strokeWidth","stroke","class","strokeLinecap","strokeLinejoin"],"sourceRoot":""}